//
//  MovieDetailViewController.swift
//  iOS_OTT
//
//  Created by 최민준 on 12/11/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift


protocol MovieDetailDisplayLogic: AnyObject {
    func displayPageInfo(viewModel: MovieDetail.Something.ViewModel)
}

class MovieDetailViewController: UIViewController, MovieDetailDisplayLogic {
    var interactor: MovieDetailBusinessLogic?
    var router: (NSObjectProtocol & MovieDetailRoutingLogic & MovieDetailDataPassing)?
    
    var pageView: MovieDetailView { self.view as! MovieDetailView }
    
    private let disposeBag: DisposeBag = .init()
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = MovieDetailInteractor()
        let presenter = MovieDetailPresenter()
        let router = MovieDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    
    // MARK: View lifecycle
    
    override func loadView() {
        self.view = MovieDetailView.create()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.pageView.closeButton.rx.tap.bind {
            self.dismiss(animated: true)
        }.disposed(by: self.disposeBag)
        
        self.requestPageInfo()
    }
    
    
    // MARK: Do something
    
    func requestPageInfo() {
        let request = MovieDetail.Something.Request()
        self.interactor?.requestPageInfo(request: request)
    }
    
    func displayPageInfo(viewModel: MovieDetail.Something.ViewModel) {
        self.pageView.displayPageInfo(viewModel: viewModel)
    }
}
