//
//  MovieSearchViewController.swift
//  iOS_OTT
//
//  Created by 최민준 on 1/18/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift
import RxCocoa


protocol MovieSearchDisplayLogic: AnyObject {
    func displayPageInfo(viewModel: MovieSearch.PageInfo.ViewModel)
}

class MovieSearchViewController: UIViewController, MovieSearchDisplayLogic {
    var interactor: MovieSearchBusinessLogic?
    var router: (NSObjectProtocol & MovieSearchRoutingLogic & MovieSearchDataPassing)?
    
    var pageView: MovieSearchView { self.view as! MovieSearchView }
    
    private let disposeBag: DisposeBag = .init()
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = MovieSearchInteractor()
        let presenter = MovieSearchPresenter()
        let router = MovieSearchRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    
    // MARK: View lifecycle
    
    override func loadView() {
        self.view = MovieSearchView.create()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.pageView.do {
            $0.movieDetailButtonDidTap.bind { [unowned self] movieId in
                self.router?.routeToMovieDetailPage(movieId: movieId)
            }.disposed(by: self.disposeBag)
        }
        
        self.setUpNaviBar()
        self.requestPageInfo()
    }
    
    private func setUpNaviBar() {
        let bounds = UIScreen.main.bounds
        let width = bounds.size.width // 화면 너비
        let searchBar = UISearchBar(frame: CGRect(x: 0, y: 0, width: width - 28, height: 0))
        
        searchBar.delegate = self.pageView
        
        searchBar.placeholder = "영화를 검색해주세요.."
        searchBar.searchTextField.backgroundColor = .black
        searchBar.searchTextField.textColor = .white
        searchBar.searchTextField.leftView?.tintColor = .white
        
        self.navigationItem.titleView = searchBar
    }
    
    func requestPageInfo() {
        self.interactor?.requestPageInfo(request: .init(listType: .nowPlaying, pageType: .first))
    }
    
    func displayPageInfo(viewModel: MovieSearch.PageInfo.ViewModel) {
        self.pageView.displayPageInfo(viewModel: viewModel)
    }
}

